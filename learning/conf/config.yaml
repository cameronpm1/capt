#defaults:  
#  - _self_  
#  - override hydra/hydra_logging: disabled  
#  - override hydra/job_logging: disabled

seed: 1 # set experiment seed

hydra:
  job:
    name: adversary_test # set job name
  run:
    dir: /logs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S} # model and log will be saved here

alg:
  type: ppo
  nenv: 1
  lr: 0.0001
  batch_size: 256
  gamma: 0.999
  pi: [32, 32]
  vf: [32, 32]
  device: cpu # cpu, cuda
  total_timesteps: 5e6 #20e6
  


env:
  max_timestep: 512
  max_control: [0.3,0.3,0.3,0.1,0.1,0.1,1000,1000,1000]
  action_scaling: clip
  random_initial_state: False  


satellite:
  name: satellite
  mesh: 
    points: [[1.0,0.5,0.5],[-1.0,0.5,0.5],[1.0,0.5,-0.5],[-1.0,0.5,-0.5],[1.0,-0.5,0.5],[-1.0,-0.5,0.5],[1.0,-0.5,-0.5],[-1.0,-0.5,-0.5]]
    lines: [[0,1],[0,2],[1,3],[2,3],[4,5],[4,6],[5,7],[6,7],[0,4],[1,5],[2,6],[3,7]]
  dynamics:
    timestep: 3
    horizon: 5
    pos: [0, 0, 0]
    initial_orbit:
      a: 35786
      ecc: 0.0
      inc: 1.85
      raan: 49.526
      argp: 286.537
      nu: 0
    initial_state_data:
      momentum_wheel_vel: [0,0,0]
    spacecraft_data:
      J_sc: [1.7e4, 2.7e4, 2.7e4]
      alpha: [0.8, 0.8, 0.8]
      mass: 4000
    control_lim: [0.5,0.5,0.5,0.1,0.1,0.1,1000,1000,1000]

path_planner:
  goal_state: [1,20,-4,0,0,0,0,0,0,0,0,0,0,0,0] #[0,20,0,0,0,0,0,0,0,0,0,0,0,0,0] #
  path_planning_algorithm: VFH
  kwargs:
    radius: 10
    min_obstacle_distance: 4
    iterations: 1
    distance_tolerance: 0.5
    layers: 7
    angle_sections: 12
  max_distance: 0.3
  interpolation_method: spline
  n: 25

sim:
  control_method: MPC
  point_cloud_size: 400
  path_point_tolerance: 0.1
  point_cloud_radius: 30
  goal_tolerance: 0.1
  kwargs:
    upper_state_bounds: [1e10,  1e10,  1e10, 1e10, 1e10, 1e10, 0.2, 0.2, 0.2, .25, .25, .25, 1000, 1000, 1000]
    lower_state_bounds: [-1e10,  -1e10,  -1e10, -1e10, -1e10, -1e10, -0.2, -0.2, -0.2, -.25, -.25, -.25, -1000, -1000, -1000]
    horizon: 20
    valued_actions: 1

#IMPORTANT: when creating a randomly initiated env, make sure that point_cloud_size > n!
random:
  on: False
  n: 10
  vel: 0.0005
  x_range: [-7,7] #[-7,7]
  y_range: [4,18] #[5,15]
  z_range: [-7,7] #[-7,7]
  stl: stl_files/ball.stl
  stl_scale: 0.001

adversary:
  on: True
  adversaries:
    adversary1:
      name: adversary1
      pos: [-2, 9, 0]
      vel: [0, 0, 0]
      stl: stl_files/ball.STL
      stl_scale: 0.001
      control_lim: [0.3,0.3,0.3,0.1,0.1,0.1,1000,1000,1000]
    #adversary2:
      #name: adversary2
      #pos: [-5, 10, 0]
      #vel: [0, 0, 0]
      #stl: stl_files/ball.STL
      #stl_scale: 0.001
      #control_lim: [0.3,0.3,0.3,0.1,0.1,0.1,1000,1000,1000]
    #adversary3:
      #name: adversary3
      #pos: [0, 12, 0]
      #vel: [0, 0, 0]
      #stl: stl_files/ball.STL
      #stl_scale: 0.001
      #control_lim: [0.3,0.3,0.3,0.1,0.1,0.1,1000,1000,1000]

obstacles:
  #obstacle1:
    #name: debris2
    #pos: [-0.3, 5.5, -0.4]
    #vel: [0, 0, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.001
  #obstacle2:
    #name: debris3
    #pos: [0, 17, 0]
    #vel: [0, 0, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.001
  #obstacle3:
    #name: debris4
    #pos: [10, 24, 2]
    #vel: [-0.0012, 0, 0.0005]
    #stl: stl_files/ball.stl
    #stl_scale: 0.001
  #obstacle2:
    #name: debris2
    #pos: [10, 5, 3]
    #vel: [-0.0001, -0.0005, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.00333
  #obstacle3:
    #name: debris2
    #pos: [20, 15, -3]
    #vel: [-0.0001, -0.0005, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.00333
  #obstacle4:
    #name: debris2
    #pos: [0, 15, 5]
    #vel: [0.001, -0.0015, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.00333
  #obstacle5:
    #name: debris2
    #pos: [15, 0, 2]
    #vel: [-0.0001, -0.0005, 0]
    #stl: stl_files/ball.stl
    #stl_scale: 0.00333